{"version":3,"sources":["common/AletNoResults.js","common/Spinner.js","context/AppContext.js","services/getFetchCards.js","components/Card/Card.js","components/Card/GridCards.js","hooks/useFetchCards.js","components/Card/InputSearch.js","context/KeywordReducer.js","FlickrSearchApp.js","index.js"],"names":["AletNoResults","message","className","role","xmlns","viewBox","d","Spinner","class","AppContext","createContext","getFetchCards","keyword","a","url","encodeURI","fetch","resp","json","items","cards","map","card","title","link","image","media","m","author","description","dateTaken","date_taken","tags","console","log","Card","href","target","rel","src","alt","split","tag","GridCards","keywords","useContext","useState","obj","setState","useEffect","data","loading","then","useFetchCards","length","index","InputSearch","dispatch","debouncedChangeHandler","useCallback","debounce","event","type","payload","value","placeholder","onChange","KeywordReducer","state","action","FlickrSearchApp","useReducer","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcec407d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const AletNoResults = ({ message }) => {\n  return (\n    <div\n      className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mt-3\"\n      role=\"alert\"\n    >\n      <strong className=\"font-bold\">Ups!</strong>\n      <span className=\"block sm:inline\">{message}</span>\n      <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n        <svg\n          className=\"fill-current h-6 w-6 text-red-500\"\n          role=\"button\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n        >\n          <title>Close</title>\n          <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\n        </svg>\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport './../assets/spinner.css';\n\nexport const Spinner = () => {\n  return (\n    <div class=\" flex justify-center items-center mt-5\">\n      <div class=\"animate-spin rounded-full h-32 w-32 border-b-2 border-red-900\"></div>\n    </div>\n  );\n};\n","import { createContext } from 'react';\n\nexport const AppContext = createContext();","export const getFetchCards = async ( keyword )  => {\n    // const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( keyword ) }&limit=10&api_key=N5HCK1RKEn0gVCa5b37BDsfS5PsVWDXl`;\n    // const url = `https://www.flickr.com/services/feeds/photos_public.gne?format=json&nojsoncallback=true&tags=${encodeURI(keyword)}`;\n    if(!keyword) {\n        return [];\n    }\n\n    const url = `https://flickr-api-wrapper.corzo.dev/${encodeURI(keyword)}`;\n\n    const resp = await fetch( url );\n    const { items } = await resp.json();\n\n    const cards = items.map ( card => {\n        return {\n            title: card.title,\n            link: card.link,\n            image: card.media.m,\n            author: card.author,\n            description: card.description,\n            dateTaken: card.date_taken,\n            tags: card.tags\n            // id: img.id,\n            // title: img.title,\n            // url: img.images?.downsized_medium.url\n        }\n    })\n    console.log('cards = ', cards);\n    return cards;\n}","import React from \"react\";\n\nexport const Card = ({ title, link, image, description, author, dateTaken, tags }) => {\n  return (\n    <div className=\"w-full sm:w-1/2 lg:w-1/3 px-2 my-2\">\n      <div className=\"card\">\n        <a href={link} target=\"_blank\" rel=\"noreferrer\">\n         <img src={image} alt=\"\" className=\"w-full\" />\n        </a>\n        <div className=\"px-6 py-4\">\n          <div className=\"font-bold text-xl mb-2\">{ title }</div>\n          <p className=\"text-gray-700 text-base\">\n            { dateTaken }\n          </p>\n\n          <p></p>\n        </div>\n        <div className=\"px-6 py-4\">\n          {\n            tags.split(\" \").map((tag) => { \n              return <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mt-2\">\n                #{ tag }\n              </span>\n            })\n          }\n        </div>\n        <div class=\"p-4 text-right text-sm text-gray-600\">\n          <span class=\"ml-2\">By: { author }</span>\n        </div>\n        {/* <footer className=\"blockquote-footer\">By: { author }</footer> */}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { AletNoResults } from \"../../common/AletNoResults\";\nimport { Spinner } from \"../../common/Spinner\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { useFetchCards } from \"../../hooks/useFetchCards\";\nimport { Card } from \"./Card\";\n\nexport const GridCards = () => {\n  const { keywords } = useContext( AppContext );\n  const message = `There is no a results with ${ keywords }`;\n  const { data, loading } = useFetchCards();\n\n  return (\n    <>\n      { (loading) && <Spinner />}\n      { \n        (!loading && keywords !== '' && data.length === 0) \n        && \n        <AletNoResults message={ message } />\n      }\n      <div className=\"my-5 flex flex-wrap -mx-2\">\n        {\n          (data) &&\n          data.map((card, index) => (\n            <Card key={index} {...card} />\n          ))\n        }\n      </div>\n    </>\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../context/AppContext\";\nimport { getFetchCards } from \"../services/getFetchCards\";\n\nexport const useFetchCards = (keyword) => {\n  const { keywords } = useContext( AppContext );\n\n  const [obj, setState] = useState({});\n\n  useEffect(() => {\n    setState({\n      data: [],\n      loading: true,\n    });\n    \n    getFetchCards(keywords).then((cards) => {\n      setState({\n        data: cards,\n        loading: false,\n      });\n    });\n  }, [keywords]);\n\n  return obj;\n};\n","import React, { useCallback, useContext } from \"react\";\n// import _ from \"lodash\";\nimport debounce from 'lodash.debounce';\n\nimport { AppContext } from \"../../context/AppContext\";\n\nexport const InputSearch = () => {\n\n  const { dispatch } = useContext(AppContext);\n\n    const handleInputChange = (event) => {\n      dispatch({\n          type: 'update',\n          payload: event.target.value\n      });\n    }\n\n    const debouncedChangeHandler = useCallback(\n      debounce(handleInputChange, 500)\n    , []);\n    \n  return <div className=\"mt-5\">\n      <input\n        placeholder=\"Search\"\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n        type=\"text\" \n        onChange={debouncedChangeHandler}\n      />\n    </div>;\n};\n","export const KeywordReducer = (state = {}, action) => {\n    switch (action.type) {\n        case \"update\":\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import React, { useReducer } from \"react\";\nimport { GridCards } from \"./components/Card/GridCards\";\nimport { InputSearch } from \"./components/Card/InputSearch\";\nimport { AppContext } from \"./context/AppContext\";\nimport { KeywordReducer } from \"./context/KeywordReducer\";\n\nexport const FlickrSearchApp = () => {\n  // const [keyword, setKeyword] = useState(\"\");\n  const [keywords, dispatch] = useReducer(KeywordReducer, '');\n\n\n  return (\n    <AppContext.Provider value={{keywords, dispatch}}>\n      <div className=\"container mx-auto mx-auto px-4\">\n        <h2 className=\"text-black-500 text-3xl mt-5 font-rale font-black\">\n        Flickr Search App\n        </h2>\n        <hr />\n        <InputSearch></InputSearch>\n        <GridCards/>\n      </div>\n    </AppContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FlickrSearchApp } from './FlickrSearchApp';\n\nimport './assets/tailwind.css';\nimport './assets/spinner.css';\n\nReactDOM.render(\n  <FlickrSearchApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}