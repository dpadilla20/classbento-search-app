{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../context/AppContext\";\nimport { getFetchCards } from \"../services/getFetchCards\";\nexport const useFetchCards = keyword => {\n  _s();\n\n  const {\n    keywords\n  } = useContext(AppContext);\n  const [obj, setState] = useState({\n    data: [],\n    loading: true\n  });\n  useEffect(() => {\n    console.log('obj = ', obj);\n    console.log('keywords = ', keywords);\n    getFetchCards(keywords).then(cards => {\n      setTimeout(() => {\n        setState({\n          data: cards,\n          loading: false\n        });\n      }, 3000);\n    });\n  }, [keywords]);\n  return obj;\n};\n\n_s(useFetchCards, \"82y829IPDY1VUBcCwErKefoqt18=\");","map":{"version":3,"sources":["/Users/luisavendano/Sites/react/classbento-app/src/hooks/useFetchCards.js"],"names":["useContext","useEffect","useState","AppContext","getFetchCards","useFetchCards","keyword","keywords","obj","setState","data","loading","console","log","then","cards","setTimeout"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAeP,UAAU,CAAEG,UAAF,CAA/B;AAEA,QAAM,CAACK,GAAD,EAAMC,QAAN,IAAkBP,QAAQ,CAAC;AAC/BQ,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CAAhC;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,GAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,QAA3B;AACAH,IAAAA,aAAa,CAACG,QAAD,CAAb,CAAwBO,IAAxB,CAA8BC,KAAD,IAAW;AACtCC,MAAAA,UAAU,CAAE,MAAM;AAChBP,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEK,KADC;AAEPJ,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID,OALS,EAKP,IALO,CAAV;AAMD,KAPD;AAQD,GAXQ,EAWN,CAACJ,QAAD,CAXM,CAAT;AAaA,SAAOC,GAAP;AACD,CAtBM;;GAAMH,a","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../context/AppContext\";\nimport { getFetchCards } from \"../services/getFetchCards\";\n\nexport const useFetchCards = (keyword) => {\n  const { keywords } = useContext( AppContext );\n\n  const [obj, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    console.log('obj = ', obj)\n    console.log('keywords = ', keywords)\n    getFetchCards(keywords).then((cards) => {\n      setTimeout( () => {\n        setState({\n          data: cards,\n          loading: false,\n        });\n      }, 3000);\n    });\n  }, [keywords]);\n\n  return obj;\n};\n"]},"metadata":{},"sourceType":"module"}