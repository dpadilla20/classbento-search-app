{"ast":null,"code":"import _slicedToArray from\"/Users/luisavendano/Sites/react/classbento-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useEffect,useState}from\"react\";import{AppContext}from\"../context/AppContext\";import{getFetchCards}from\"../services/getFetchCards\";export var useFetchCards=function useFetchCards(keyword){var _useContext=useContext(AppContext),keywords=_useContext.keywords;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),obj=_useState2[0],setState=_useState2[1];useEffect(function(){setState({data:[],loading:true});getFetchCards(keywords).then(function(cards){setState({data:cards,loading:false});});},[keywords]);return obj;};","map":{"version":3,"sources":["/Users/luisavendano/Sites/react/classbento-app/src/hooks/useFetchCards.js"],"names":["useContext","useEffect","useState","AppContext","getFetchCards","useFetchCards","keyword","keywords","obj","setState","data","loading","then","cards"],"mappings":"qKAAA,OAASA,UAAT,CAAqBC,SAArB,CAAgCC,QAAhC,KAAgD,OAAhD,CACA,OAASC,UAAT,KAA2B,uBAA3B,CACA,OAASC,aAAT,KAA8B,2BAA9B,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAa,CACxC,gBAAqBN,UAAU,CAAEG,UAAF,CAA/B,CAAQI,QAAR,aAAQA,QAAR,CAEA,cAAwBL,QAAQ,CAAC,EAAD,CAAhC,wCAAOM,GAAP,eAAYC,QAAZ,eAEAR,SAAS,CAAC,UAAM,CACdQ,QAAQ,CAAC,CACPC,IAAI,CAAE,EADC,CAEPC,OAAO,CAAE,IAFF,CAAD,CAAR,CAKAP,aAAa,CAACG,QAAD,CAAb,CAAwBK,IAAxB,CAA6B,SAACC,KAAD,CAAW,CACtCJ,QAAQ,CAAC,CACPC,IAAI,CAAEG,KADC,CAEPF,OAAO,CAAE,KAFF,CAAD,CAAR,CAID,CALD,EAMD,CAZQ,CAYN,CAACJ,QAAD,CAZM,CAAT,CAcA,MAAOC,CAAAA,GAAP,CACD,CApBM","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../context/AppContext\";\nimport { getFetchCards } from \"../services/getFetchCards\";\n\nexport const useFetchCards = (keyword) => {\n  const { keywords } = useContext( AppContext );\n\n  const [obj, setState] = useState({});\n\n  useEffect(() => {\n    setState({\n      data: [],\n      loading: true,\n    });\n    \n    getFetchCards(keywords).then((cards) => {\n      setState({\n        data: cards,\n        loading: false,\n      });\n    });\n  }, [keywords]);\n\n  return obj;\n};\n"]},"metadata":{},"sourceType":"module"}