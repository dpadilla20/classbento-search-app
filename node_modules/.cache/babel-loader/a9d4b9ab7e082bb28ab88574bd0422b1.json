{"ast":null,"code":"import _regeneratorRuntime from\"/Users/luisavendano/Sites/react/classbento-search-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/luisavendano/Sites/react/classbento-search-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var getFetchCards=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(keyword){var url,resp,_yield$resp$json,items,cards;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(keyword){_context.next=2;break;}return _context.abrupt(\"return\",[]);case 2:url=\"https://flickr-api-wrapper.corzo.dev/\".concat(encodeURI(keyword));_context.next=5;return fetch(url);case 5:resp=_context.sent;_context.next=8;return resp.json();case 8:_yield$resp$json=_context.sent;items=_yield$resp$json.items;cards=items.map(function(card){return{title:card.title,link:card.link,image:card.media.m,author:card.author,description:card.description,dateTaken:card.date_taken,tags:card.tags// id: img.id,\n// title: img.title,\n// url: img.images?.downsized_medium.url\n};});console.log('cards = ',cards);return _context.abrupt(\"return\",cards);case 13:case\"end\":return _context.stop();}}},_callee);}));return function getFetchCards(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/luisavendano/Sites/react/classbento-search-app/src/services/getFetchCards.js"],"names":["getFetchCards","keyword","url","encodeURI","fetch","resp","json","items","cards","map","card","title","link","image","media","m","author","description","dateTaken","date_taken","tags","console","log"],"mappings":"qVAAA,MAAO,IAAMA,CAAAA,aAAa,0FAAG,iBAAQC,OAAR,+JAGrBA,OAHqB,yDAId,EAJc,SAOnBC,GAPmB,gDAO2BC,SAAS,CAACF,OAAD,CAPpC,wBASNG,CAAAA,KAAK,CAAEF,GAAF,CATC,QASnBG,IATmB,qCAUDA,CAAAA,IAAI,CAACC,IAAL,EAVC,uCAUjBC,KAViB,kBAUjBA,KAViB,CAYnBC,KAZmB,CAYXD,KAAK,CAACE,GAAN,CAAY,SAAAC,IAAI,CAAI,CAC9B,MAAO,CACHC,KAAK,CAAED,IAAI,CAACC,KADT,CAEHC,IAAI,CAAEF,IAAI,CAACE,IAFR,CAGHC,KAAK,CAAEH,IAAI,CAACI,KAAL,CAAWC,CAHf,CAIHC,MAAM,CAAEN,IAAI,CAACM,MAJV,CAKHC,WAAW,CAAEP,IAAI,CAACO,WALf,CAMHC,SAAS,CAAER,IAAI,CAACS,UANb,CAOHC,IAAI,CAAEV,IAAI,CAACU,IACX;AACA;AACA;AAVG,CAAP,CAYH,CAba,CAZW,CA0BzBC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBd,KAAxB,EA1ByB,gCA2BlBA,KA3BkB,yDAAH,kBAAbR,CAAAA,aAAa,4CAAnB","sourcesContent":["export const getFetchCards = async ( keyword )  => {\n    // const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( keyword ) }&limit=10&api_key=N5HCK1RKEn0gVCa5b37BDsfS5PsVWDXl`;\n    // const url = `https://www.flickr.com/services/feeds/photos_public.gne?format=json&nojsoncallback=true&tags=${encodeURI(keyword)}`;\n    if(!keyword) {\n        return [];\n    }\n\n    const url = `https://flickr-api-wrapper.corzo.dev/${encodeURI(keyword)}`;\n\n    const resp = await fetch( url );\n    const { items } = await resp.json();\n\n    const cards = items.map ( card => {\n        return {\n            title: card.title,\n            link: card.link,\n            image: card.media.m,\n            author: card.author,\n            description: card.description,\n            dateTaken: card.date_taken,\n            tags: card.tags\n            // id: img.id,\n            // title: img.title,\n            // url: img.images?.downsized_medium.url\n        }\n    })\n    console.log('cards = ', cards);\n    return cards;\n}"]},"metadata":{},"sourceType":"module"}